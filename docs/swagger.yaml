definitions:
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  model.UserInfoRequest:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.UserLoginResponse:
    properties:
      access-token:
        type: string
      name:
        type: string
      refresh-token:
        type: string
    type: object
  model.UserRequest:
    properties:
      name:
        type: string
    type: object
  model.UserResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.Word:
    properties:
      characters:
        type: string
      id:
        type: integer
      meaning:
        type: string
      pronunciation:
        type: string
    type: object
  model.WordRequest:
    properties:
      characters:
        type: string
      meaning:
        type: string
      pronunciation:
        type: string
    required:
    - characters
    - pronunciation
    type: object
info:
  contact: {}
paths:
  /v1/admin/users:
    get:
      consumes:
      - application/json
      description: Get users if you are admin
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get users
      tags:
      - users
  /v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Delete user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: object user
        format: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Update user
      tags:
      - users
  /v1/users/admin:
    post:
      consumes:
      - application/json
      description: Add admin, only admin can add admin
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: object user
        format: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInfoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Add admin
      tags:
      - users
  /v1/users/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: object user
        format: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Login
      tags:
      - users
  /v1/users/register:
    post:
      consumes:
      - application/json
      description: Add user (register)
      parameters:
      - description: object user
        format: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInfoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Add user
      tags:
      - users
  /v1/words:
    get:
      consumes:
      - application/json
      description: Get words are pulic word
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Word'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get words
      tags:
      - words
    post:
      consumes:
      - application/json
      description: Add word, if user is admin, word is public, else word is private
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: object word
        format: word
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/model.WordRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Word'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Add word
      tags:
      - words
  /v1/words/{id}:
    delete:
      consumes:
      - application/json
      description: Delete word and favorite word
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Word ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Delete word
      tags:
      - words
    put:
      consumes:
      - application/json
      description: Update word
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Word ID
        in: path
        name: id
        required: true
        type: integer
      - description: object word
        format: word
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/model.WordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Word'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Update word
      tags:
      - words
swagger: "2.0"
